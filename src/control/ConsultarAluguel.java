package control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import model.ConnectionFactory;
import view.Tela_Aluguel;


public class ConsultarAluguel extends javax.swing.JInternalFrame {

	private static final long serialVeresultSetionUID = 1L;

	private JDesktopPane jdpPrincipal;
	
	private javax.swing.JButton btExcluir;
	private javax.swing.JButton btNovo;
	private javax.swing.JButton btAlterar;
	private javax.swing.JButton btPesquisar;
	private javax.swing.JButton btCancelar;
	private javax.swing.JButton btAtualizar;
	private javax.swing.JLabel jLabel;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jtAluguel;
	private javax.swing.JTextField txtIdAluguel;

	public ConsultarAluguel( JDesktopPane jdp ) {
		initComponents();
		jdpPrincipal = jdp;
		try {
			Connection connection = new ConnectionFactory().getConnection();
			String sql = "select * from aluguel ";
			// if(!txtPlaca.getText().equals(""))
			// sql = sql + " where Nome LIKE ? ";
			PreparedStatement statement = connection.prepareStatement( sql );
			if( !txtIdAluguel.getText().equals( "" ) )
				statement.setString( 1, "%" + txtIdAluguel.getText() + "%" );
			ResultSet resultSet = statement.executeQuery();
			DefaultTableModel model = ( DefaultTableModel ) jtAluguel.getModel();
			model.setNumRows( 0 );
			while( resultSet.next() ) {
				String[] linha = { resultSet.getString( "idAluguel" ),resultSet.getString( "cliente" ),resultSet.getString( "veiculo" ), resultSet.getString( "dataInicial" ) , resultSet.getString( "dataFinal" ), resultSet.getString( "valorLocacao" ) };
				model.addRow( linha );
			}

			statement.close();
			connection.close();
		} catch( SQLException e ) {
			JOptionPane.showMessageDialog( this, e );
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings( { "unchecked", "serial" } )

	private void initComponents() {

		jLabel = new javax.swing.JLabel();
		txtIdAluguel = new javax.swing.JTextField();
		btPesquisar = new javax.swing.JButton();
		btNovo = new javax.swing.JButton();
		btAlterar = new javax.swing.JButton();
		btExcluir = new javax.swing.JButton();
		btCancelar = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jtAluguel = new javax.swing.JTable();
		btAtualizar = new javax.swing.JButton();

		setClosable( true );
		setIconifiable( true );
		setMaximizable( true );
		setResizable( true );
		setTitle( "Consultar Aluguel" );

		jLabel.setText( "ID Aluguel:" );

		txtIdAluguel.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btIdAluguelActionPerformed( evt );
			}
		} );

		btPesquisar.setText( "Pesquisar" );
		btPesquisar.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btPesquisarActionPerformed( evt );
			}
		} );

		btNovo.setText( "Novo" );
		btNovo.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btNovoActionPerformed( evt );
			}
		} );

		btAlterar.setText( "Alterar" );
		btAlterar.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btAlterarActionPerformed( evt );
			}
		} );

		btExcluir.setText( "Excluir" );
		btExcluir.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btExcluirActionPerformed( evt );
			}
		} );

		btCancelar.setText( "Cancelar" );
		btCancelar.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				btCancelarActionPerformed( evt );
			}
		} );

		jtAluguel.setModel( new javax.swing.table.DefaultTableModel( new Object[][] {

		}, new String[] { "ID Aluguel", "Cliente","Veiculo","Data Inicial","Data Final","Valor"} ) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false };

			public boolean isCellEditable( int rowIndex, int columnIndex ) {
				return canEdit[columnIndex];
			}
		} );
		jScrollPane1.setViewportView( jtAluguel );

		btAtualizar.setText( "Atualizar" );
		btAtualizar.addActionListener( new java.awt.event.ActionListener() {
			public void actionPerformed( java.awt.event.ActionEvent evt ) {
				jButtonAtualizarActionPerformed( evt );
			}
		} );

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout( getContentPane() );
		getContentPane().setLayout( layout );
		layout.setHorizontalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
				.addGroup( layout.createSequentialGroup().addContainerGap()
						.addGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
								.addComponent( jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE )
								.addGroup( layout.createSequentialGroup().addComponent( btPesquisar )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( btNovo )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( btAlterar )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( btExcluir )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( btAtualizar )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( btCancelar )
										.addGap( 0, 0, Short.MAX_VALUE ) )
								.addGroup( layout.createSequentialGroup().addComponent( jLabel )
										.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( txtIdAluguel ) ) )
						.addContainerGap() ) );
		layout.setVerticalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
				.addGroup( layout.createSequentialGroup().addContainerGap()
						.addGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE )
								.addComponent( txtIdAluguel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE )
								.addComponent( jLabel ) )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
						.addGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE ).addComponent( btPesquisar )
								.addComponent( btNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE )
								.addComponent( btAlterar ).addComponent( btExcluir ).addComponent( btCancelar ).addComponent( btAtualizar ) )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE )
						.addContainerGap() ) );

		pack();
	}

	private void btIdAluguelActionPerformed( java.awt.event.ActionEvent evt ) {
	
	}

	private void btCancelarActionPerformed( java.awt.event.ActionEvent evt ) {

	}

	private void btNovoActionPerformed( java.awt.event.ActionEvent evt ) {
		Tela_Aluguel alugar = new Tela_Aluguel();
		jdpPrincipal.add( alugar);
		alugar.setVisible( true );
	}

	private void btPesquisarActionPerformed( java.awt.event.ActionEvent evt ) {
		
		try {
			Connection connection = new ConnectionFactory().getConnection();
			String sql = "select * from aluguel ";
			if( !txtIdAluguel.getText().equals( "" ) )
				sql = sql + " where idAluguel LIKE ? ";
			PreparedStatement statement = connection.prepareStatement( sql );
			if( !txtIdAluguel.getText().equals( "" ) )
				statement.setString( 1, "%" + txtIdAluguel.getText() + "%" );
			ResultSet resultSet = statement.executeQuery();
			DefaultTableModel model = ( DefaultTableModel ) jtAluguel.getModel();
			model.setNumRows( 0 );
			while( resultSet.next() ) {
				String[] linha = { resultSet.getString( "idAluguel" ),resultSet.getString( "cliente" ),resultSet.getString( "veiculo" ), resultSet.getString( "dataInicial" ) , resultSet.getString( "dataFinal" ), resultSet.getString( "valorLocacao" ), 
						};
				model.addRow( linha );
			}

			statement.close();
			connection.close();
		} catch( SQLException e ) {
			JOptionPane.showMessageDialog( this, e );
		}

	}

	private void btExcluirActionPerformed( java.awt.event.ActionEvent evt ) {
		try {
			Connection connection = new ConnectionFactory().getConnection();
			String sql = "delete from aluguel where idAluguel = ?";
			PreparedStatement statement = connection.prepareStatement( sql );
			int linha = this.jtAluguel.getSelectedRow();
			statement.setString( 1, jtAluguel.getValueAt( linha, 0 ).toString() );
			statement.execute();
			statement.close();
			connection.close();
			DefaultTableModel model = ( DefaultTableModel ) jtAluguel.getModel();
			model.removeRow( linha );
			JOptionPane.showMessageDialog( this, "Locação Excluída com Sucesso!" );
			this.setClosable( true );
		} catch( SQLException e ) {
			JOptionPane.showMessageDialog( this, e );
		}
	}



	private void btAlterarActionPerformed( java.awt.event.ActionEvent evt ) {
		int linha = this.jtAluguel.getSelectedRow();
		//int id = Integer.parseInt( jtVeiculo.getValueAt( linha, 0 ).toString() );
		Tela_Aluguel alugar = new Tela_Aluguel();
		jdpPrincipal.add( alugar);
		alugar.setVisible( true );
	}

	private void jButtonAtualizarActionPerformed( java.awt.event.ActionEvent evt ) {
		try {
			Connection con = new ConnectionFactory().getConnection();
			String sql = "select * from aluguel ";
			// if(!txtPlaca.getText().equals(""))
			// sql = sql + " where Nome LIKE ? ";
			PreparedStatement statement = con.prepareStatement( sql );
			if( !txtIdAluguel.getText().equals( "" ) )
				statement.setString( 1, "%" + txtIdAluguel.getText() + "%" );
			ResultSet resultSet = statement.executeQuery();
			DefaultTableModel model = ( DefaultTableModel ) jtAluguel.getModel();
			model.setNumRows( 0 );
			while( resultSet.next() ) {
				String[] linha = { resultSet.getString( "idAluguel" ),resultSet.getString( "cliente" ),resultSet.getString( "veiculo" ), resultSet.getString( "dataInicial" ) , resultSet.getString( "dataFinal" ), resultSet.getString( "valorLocacao" ) };
				model.addRow( linha );
			}

			statement.close();
			con.close();
		} catch( SQLException e ) {
			JOptionPane.showMessageDialog( this, e );
		}
	}


}
